generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  title     String
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model User {
  id              Int             @id @default(autoincrement())
  email           String          @unique
  int             Int
  optionalInt     Int?
  float           Float
  optionalFloat   Float?
  string          String
  optionalString  String?
  json            Json
  optionalJson    Json?
  enum            ABeautifulEnum
  optionalEnum    ABeautifulEnum?
  boolean         Boolean
  optionalBoolean Boolean?
  posts           Post[]
}

model M {
  id              Int             @id @default(autoincrement())
  n               N[]
  int             Int
  optionalInt     Int?
  float           Float
  optionalFloat   Float?
  string          String
  optionalString  String?
  json            Json
  optionalJson    Json?
  enum            ABeautifulEnum
  optionalEnum    ABeautifulEnum?
  boolean         Boolean
  optionalBoolean Boolean?
}

model N {
  id              Int             @id @default(autoincrement())
  m               M[]
  int             Int
  optionalInt     Int?
  float           Float
  optionalFloat   Float?
  string          String
  optionalString  String?
  json            Json
  optionalJson    Json?
  enum            ABeautifulEnum
  optionalEnum    ABeautifulEnum?
  boolean         Boolean
  optionalBoolean Boolean?
}

model OneOptional {
  id              Int             @id @default(autoincrement())
  many            ManyRequired[]
  int             Int
  optionalInt     Int?
  float           Float
  optionalFloat   Float?
  string          String
  optionalString  String?
  json            Json
  optionalJson    Json?
  enum            ABeautifulEnum
  optionalEnum    ABeautifulEnum?
  boolean         Boolean
  optionalBoolean Boolean?
}

model ManyRequired {
  id  Int          @id @default(autoincrement())
  one OneOptional? @relation(fields: [oneOptionalId], references: [id])

  oneOptionalId   Int?
  int             Int
  optionalInt     Int?
  float           Float
  optionalFloat   Float?
  string          String
  optionalString  String?
  json            Json
  optionalJson    Json?
  enum            ABeautifulEnum
  optionalEnum    ABeautifulEnum?
  boolean         Boolean
  optionalBoolean Boolean?
}

model OptionalSide1 {
  id   Int            @id @default(autoincrement())
  opti OptionalSide2? @relation(fields: [optionalSide2Id], references: [id])

  optionalSide2Id Int?
  int             Int
  optionalInt     Int?
  float           Float
  optionalFloat   Float?
  string          String
  optionalString  String?
  json            Json
  optionalJson    Json?
  enum            ABeautifulEnum
  optionalEnum    ABeautifulEnum?
  boolean         Boolean
  optionalBoolean Boolean?
}

model OptionalSide2 {
  id              Int             @id @default(autoincrement())
  opti            OptionalSide1?
  int             Int
  optionalInt     Int?
  float           Float
  optionalFloat   Float?
  string          String
  optionalString  String?
  json            Json
  optionalJson    Json?
  enum            ABeautifulEnum
  optionalEnum    ABeautifulEnum?
  boolean         Boolean
  optionalBoolean Boolean?

}

enum ABeautifulEnum {
  A
  B
  C
}
